/*! For license information please see 802.b16439efc1dbfddc7b36.js.LICENSE.txt */
(self.webpackChunkmindmap=self.webpackChunkmindmap||[]).push([[802],{86500:(t,e,r)=>{"use strict";r.d(e,{GC:()=>c,T6:()=>g,VD:()=>p,WE:()=>f,Wl:()=>d,Yt:()=>v,lC:()=>i,py:()=>u,rW:()=>o,s:()=>l,ve:()=>s,vq:()=>h});var n=r(90279);function o(t,e,r){return{r:255*(0,n.sh)(t,255),g:255*(0,n.sh)(e,255),b:255*(0,n.sh)(r,255)}}function i(t,e,r){t=(0,n.sh)(t,255),e=(0,n.sh)(e,255),r=(0,n.sh)(r,255);var o=Math.max(t,e,r),i=Math.min(t,e,r),a=0,s=0,u=(o+i)/2;if(o===i)s=0,a=0;else{var f=o-i;switch(s=u>.5?f/(2-o-i):f/(o+i),o){case t:a=(e-r)/f+(e<r?6:0);break;case e:a=(r-t)/f+2;break;case r:a=(t-e)/f+4}a/=6}return{h:a,s,l:u}}function a(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*r*(e-t):r<.5?e:r<2/3?t+(e-t)*(2/3-r)*6:t}function s(t,e,r){var o,i,s;if(t=(0,n.sh)(t,360),e=(0,n.sh)(e,100),r=(0,n.sh)(r,100),0===e)i=r,s=r,o=r;else{var u=r<.5?r*(1+e):r+e-r*e,f=2*r-u;o=a(f,u,t+1/3),i=a(f,u,t),s=a(f,u,t-1/3)}return{r:255*o,g:255*i,b:255*s}}function u(t,e,r){t=(0,n.sh)(t,255),e=(0,n.sh)(e,255),r=(0,n.sh)(r,255);var o=Math.max(t,e,r),i=Math.min(t,e,r),a=0,s=o,u=o-i,f=0===o?0:u/o;if(o===i)a=0;else{switch(o){case t:a=(e-r)/u+(e<r?6:0);break;case e:a=(r-t)/u+2;break;case r:a=(t-e)/u+4}a/=6}return{h:a,s:f,v:s}}function f(t,e,r){t=6*(0,n.sh)(t,360),e=(0,n.sh)(e,100),r=(0,n.sh)(r,100);var o=Math.floor(t),i=t-o,a=r*(1-e),s=r*(1-i*e),u=r*(1-(1-i)*e),f=o%6;return{r:255*[r,s,a,a,u,r][f],g:255*[u,r,r,s,a,a][f],b:255*[a,a,u,r,r,s][f]}}function h(t,e,r,o){var i=[(0,n.FZ)(Math.round(t).toString(16)),(0,n.FZ)(Math.round(e).toString(16)),(0,n.FZ)(Math.round(r).toString(16))];return o&&i[0].startsWith(i[0].charAt(1))&&i[1].startsWith(i[1].charAt(1))&&i[2].startsWith(i[2].charAt(1))?i[0].charAt(0)+i[1].charAt(0)+i[2].charAt(0):i.join("")}function l(t,e,r,o,i){var a=[(0,n.FZ)(Math.round(t).toString(16)),(0,n.FZ)(Math.round(e).toString(16)),(0,n.FZ)(Math.round(r).toString(16)),(0,n.FZ)(d(o))];return i&&a[0].startsWith(a[0].charAt(1))&&a[1].startsWith(a[1].charAt(1))&&a[2].startsWith(a[2].charAt(1))&&a[3].startsWith(a[3].charAt(1))?a[0].charAt(0)+a[1].charAt(0)+a[2].charAt(0)+a[3].charAt(0):a.join("")}function c(t,e,r,o){return[(0,n.FZ)(d(o)),(0,n.FZ)(Math.round(t).toString(16)),(0,n.FZ)(Math.round(e).toString(16)),(0,n.FZ)(Math.round(r).toString(16))].join("")}function d(t){return Math.round(255*parseFloat(t)).toString(16)}function g(t){return p(t)/255}function p(t){return parseInt(t,16)}function v(t){return{r:t>>16,g:(65280&t)>>8,b:255&t}}},48701:(t,e,r)=>{"use strict";r.d(e,{R:()=>n});var n={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",goldenrod:"#daa520",gold:"#ffd700",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavenderblush:"#fff0f5",lavender:"#e6e6fa",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"}},1350:(t,e,r)=>{"use strict";r.d(e,{ky:()=>c,uA:()=>a,uz:()=>l});var n=r(86500),o=r(48701),i=r(90279);function a(t){var e={r:0,g:0,b:0},r=1,o=null,a=null,s=null,u=!1,f=!1;return"string"==typeof t&&(t=l(t)),"object"==typeof t&&(c(t.r)&&c(t.g)&&c(t.b)?(e=(0,n.rW)(t.r,t.g,t.b),u=!0,f="%"===String(t.r).substr(-1)?"prgb":"rgb"):c(t.h)&&c(t.s)&&c(t.v)?(o=(0,i.JX)(t.s),a=(0,i.JX)(t.v),e=(0,n.WE)(t.h,o,a),u=!0,f="hsv"):c(t.h)&&c(t.s)&&c(t.l)&&(o=(0,i.JX)(t.s),s=(0,i.JX)(t.l),e=(0,n.ve)(t.h,o,s),u=!0,f="hsl"),Object.prototype.hasOwnProperty.call(t,"a")&&(r=t.a)),r=(0,i.Yq)(r),{ok:u,format:t.format||f,r:Math.min(255,Math.max(e.r,0)),g:Math.min(255,Math.max(e.g,0)),b:Math.min(255,Math.max(e.b,0)),a:r}}var s="(?:".concat("[-\\+]?\\d*\\.\\d+%?",")|(?:").concat("[-\\+]?\\d+%?",")"),u="[\\s|\\(]+(".concat(s,")[,|\\s]+(").concat(s,")[,|\\s]+(").concat(s,")\\s*\\)?"),f="[\\s|\\(]+(".concat(s,")[,|\\s]+(").concat(s,")[,|\\s]+(").concat(s,")[,|\\s]+(").concat(s,")\\s*\\)?"),h={CSS_UNIT:new RegExp(s),rgb:new RegExp("rgb"+u),rgba:new RegExp("rgba"+f),hsl:new RegExp("hsl"+u),hsla:new RegExp("hsla"+f),hsv:new RegExp("hsv"+u),hsva:new RegExp("hsva"+f),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/};function l(t){if(0===(t=t.trim().toLowerCase()).length)return!1;var e=!1;if(o.R[t])t=o.R[t],e=!0;else if("transparent"===t)return{r:0,g:0,b:0,a:0,format:"name"};var r=h.rgb.exec(t);return r?{r:r[1],g:r[2],b:r[3]}:(r=h.rgba.exec(t))?{r:r[1],g:r[2],b:r[3],a:r[4]}:(r=h.hsl.exec(t))?{h:r[1],s:r[2],l:r[3]}:(r=h.hsla.exec(t))?{h:r[1],s:r[2],l:r[3],a:r[4]}:(r=h.hsv.exec(t))?{h:r[1],s:r[2],v:r[3]}:(r=h.hsva.exec(t))?{h:r[1],s:r[2],v:r[3],a:r[4]}:(r=h.hex8.exec(t))?{r:(0,n.VD)(r[1]),g:(0,n.VD)(r[2]),b:(0,n.VD)(r[3]),a:(0,n.T6)(r[4]),format:e?"name":"hex8"}:(r=h.hex6.exec(t))?{r:(0,n.VD)(r[1]),g:(0,n.VD)(r[2]),b:(0,n.VD)(r[3]),format:e?"name":"hex"}:(r=h.hex4.exec(t))?{r:(0,n.VD)(r[1]+r[1]),g:(0,n.VD)(r[2]+r[2]),b:(0,n.VD)(r[3]+r[3]),a:(0,n.T6)(r[4]+r[4]),format:e?"name":"hex8"}:!!(r=h.hex3.exec(t))&&{r:(0,n.VD)(r[1]+r[1]),g:(0,n.VD)(r[2]+r[2]),b:(0,n.VD)(r[3]+r[3]),format:e?"name":"hex"}}function c(t){return Boolean(h.CSS_UNIT.exec(String(t)))}},10274:(t,e,r)=>{"use strict";r.d(e,{C:()=>s,H:()=>u});var n=r(86500),o=r(48701),i=r(1350),a=r(90279),s=function(){function t(e,r){var o;if(void 0===e&&(e=""),void 0===r&&(r={}),e instanceof t)return e;"number"==typeof e&&(e=(0,n.Yt)(e)),this.originalInput=e;var a=(0,i.uA)(e);this.originalInput=e,this.r=a.r,this.g=a.g,this.b=a.b,this.a=a.a,this.roundA=Math.round(100*this.a)/100,this.format=null!==(o=r.format)&&void 0!==o?o:a.format,this.gradientType=r.gradientType,this.r<1&&(this.r=Math.round(this.r)),this.g<1&&(this.g=Math.round(this.g)),this.b<1&&(this.b=Math.round(this.b)),this.isValid=a.ok}return t.prototype.isDark=function(){return this.getBrightness()<128},t.prototype.isLight=function(){return!this.isDark()},t.prototype.getBrightness=function(){var t=this.toRgb();return(299*t.r+587*t.g+114*t.b)/1e3},t.prototype.getLuminance=function(){var t=this.toRgb(),e=t.r/255,r=t.g/255,n=t.b/255;return.2126*(e<=.03928?e/12.92:Math.pow((e+.055)/1.055,2.4))+.7152*(r<=.03928?r/12.92:Math.pow((r+.055)/1.055,2.4))+.0722*(n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4))},t.prototype.getAlpha=function(){return this.a},t.prototype.setAlpha=function(t){return this.a=(0,a.Yq)(t),this.roundA=Math.round(100*this.a)/100,this},t.prototype.toHsv=function(){var t=(0,n.py)(this.r,this.g,this.b);return{h:360*t.h,s:t.s,v:t.v,a:this.a}},t.prototype.toHsvString=function(){var t=(0,n.py)(this.r,this.g,this.b),e=Math.round(360*t.h),r=Math.round(100*t.s),o=Math.round(100*t.v);return 1===this.a?"hsv(".concat(e,", ").concat(r,"%, ").concat(o,"%)"):"hsva(".concat(e,", ").concat(r,"%, ").concat(o,"%, ").concat(this.roundA,")")},t.prototype.toHsl=function(){var t=(0,n.lC)(this.r,this.g,this.b);return{h:360*t.h,s:t.s,l:t.l,a:this.a}},t.prototype.toHslString=function(){var t=(0,n.lC)(this.r,this.g,this.b),e=Math.round(360*t.h),r=Math.round(100*t.s),o=Math.round(100*t.l);return 1===this.a?"hsl(".concat(e,", ").concat(r,"%, ").concat(o,"%)"):"hsla(".concat(e,", ").concat(r,"%, ").concat(o,"%, ").concat(this.roundA,")")},t.prototype.toHex=function(t){return void 0===t&&(t=!1),(0,n.vq)(this.r,this.g,this.b,t)},t.prototype.toHexString=function(t){return void 0===t&&(t=!1),"#"+this.toHex(t)},t.prototype.toHex8=function(t){return void 0===t&&(t=!1),(0,n.s)(this.r,this.g,this.b,this.a,t)},t.prototype.toHex8String=function(t){return void 0===t&&(t=!1),"#"+this.toHex8(t)},t.prototype.toRgb=function(){return{r:Math.round(this.r),g:Math.round(this.g),b:Math.round(this.b),a:this.a}},t.prototype.toRgbString=function(){var t=Math.round(this.r),e=Math.round(this.g),r=Math.round(this.b);return 1===this.a?"rgb(".concat(t,", ").concat(e,", ").concat(r,")"):"rgba(".concat(t,", ").concat(e,", ").concat(r,", ").concat(this.roundA,")")},t.prototype.toPercentageRgb=function(){var t=function(t){return"".concat(Math.round(100*(0,a.sh)(t,255)),"%")};return{r:t(this.r),g:t(this.g),b:t(this.b),a:this.a}},t.prototype.toPercentageRgbString=function(){var t=function(t){return Math.round(100*(0,a.sh)(t,255))};return 1===this.a?"rgb(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%)"):"rgba(".concat(t(this.r),"%, ").concat(t(this.g),"%, ").concat(t(this.b),"%, ").concat(this.roundA,")")},t.prototype.toName=function(){if(0===this.a)return"transparent";if(this.a<1)return!1;for(var t="#"+(0,n.vq)(this.r,this.g,this.b,!1),e=0,r=Object.entries(o.R);e<r.length;e++){var i=r[e],a=i[0];if(t===i[1])return a}return!1},t.prototype.toString=function(t){var e=Boolean(t);t=null!=t?t:this.format;var r=!1,n=this.a<1&&this.a>=0;return e||!n||!t.startsWith("hex")&&"name"!==t?("rgb"===t&&(r=this.toRgbString()),"prgb"===t&&(r=this.toPercentageRgbString()),"hex"!==t&&"hex6"!==t||(r=this.toHexString()),"hex3"===t&&(r=this.toHexString(!0)),"hex4"===t&&(r=this.toHex8String(!0)),"hex8"===t&&(r=this.toHex8String()),"name"===t&&(r=this.toName()),"hsl"===t&&(r=this.toHslString()),"hsv"===t&&(r=this.toHsvString()),r||this.toHexString()):"name"===t&&0===this.a?this.toName():this.toRgbString()},t.prototype.toNumber=function(){return(Math.round(this.r)<<16)+(Math.round(this.g)<<8)+Math.round(this.b)},t.prototype.clone=function(){return new t(this.toString())},t.prototype.lighten=function(e){void 0===e&&(e=10);var r=this.toHsl();return r.l+=e/100,r.l=(0,a.V2)(r.l),new t(r)},t.prototype.brighten=function(e){void 0===e&&(e=10);var r=this.toRgb();return r.r=Math.max(0,Math.min(255,r.r-Math.round(-e/100*255))),r.g=Math.max(0,Math.min(255,r.g-Math.round(-e/100*255))),r.b=Math.max(0,Math.min(255,r.b-Math.round(-e/100*255))),new t(r)},t.prototype.darken=function(e){void 0===e&&(e=10);var r=this.toHsl();return r.l-=e/100,r.l=(0,a.V2)(r.l),new t(r)},t.prototype.tint=function(t){return void 0===t&&(t=10),this.mix("white",t)},t.prototype.shade=function(t){return void 0===t&&(t=10),this.mix("black",t)},t.prototype.desaturate=function(e){void 0===e&&(e=10);var r=this.toHsl();return r.s-=e/100,r.s=(0,a.V2)(r.s),new t(r)},t.prototype.saturate=function(e){void 0===e&&(e=10);var r=this.toHsl();return r.s+=e/100,r.s=(0,a.V2)(r.s),new t(r)},t.prototype.greyscale=function(){return this.desaturate(100)},t.prototype.spin=function(e){var r=this.toHsl(),n=(r.h+e)%360;return r.h=n<0?360+n:n,new t(r)},t.prototype.mix=function(e,r){void 0===r&&(r=50);var n=this.toRgb(),o=new t(e).toRgb(),i=r/100;return new t({r:(o.r-n.r)*i+n.r,g:(o.g-n.g)*i+n.g,b:(o.b-n.b)*i+n.b,a:(o.a-n.a)*i+n.a})},t.prototype.analogous=function(e,r){void 0===e&&(e=6),void 0===r&&(r=30);var n=this.toHsl(),o=360/r,i=[this];for(n.h=(n.h-(o*e>>1)+720)%360;--e;)n.h=(n.h+o)%360,i.push(new t(n));return i},t.prototype.complement=function(){var e=this.toHsl();return e.h=(e.h+180)%360,new t(e)},t.prototype.monochromatic=function(e){void 0===e&&(e=6);for(var r=this.toHsv(),n=r.h,o=r.s,i=r.v,a=[],s=1/e;e--;)a.push(new t({h:n,s:o,v:i})),i=(i+s)%1;return a},t.prototype.splitcomplement=function(){var e=this.toHsl(),r=e.h;return[this,new t({h:(r+72)%360,s:e.s,l:e.l}),new t({h:(r+216)%360,s:e.s,l:e.l})]},t.prototype.onBackground=function(e){var r=this.toRgb(),n=new t(e).toRgb();return new t({r:n.r+(r.r-n.r)*r.a,g:n.g+(r.g-n.g)*r.a,b:n.b+(r.b-n.b)*r.a})},t.prototype.triad=function(){return this.polyad(3)},t.prototype.tetrad=function(){return this.polyad(4)},t.prototype.polyad=function(e){for(var r=this.toHsl(),n=r.h,o=[this],i=360/e,a=1;a<e;a++)o.push(new t({h:(n+a*i)%360,s:r.s,l:r.l}));return o},t.prototype.equals=function(e){return this.toRgbString()===new t(e).toRgbString()},t}();function u(t,e){return void 0===t&&(t=""),void 0===e&&(e={}),new s(t,e)}},13714:(t,e,r)=>{"use strict";r.r(e),r.d(e,{TinyColor:()=>n.C,bounds:()=>m,convertDecimalToHex:()=>u.Wl,convertHexToDecimal:()=>u.T6,default:()=>y,fromRatio:()=>l,hslToRgb:()=>u.ve,hsvToRgb:()=>u.WE,inputToRGB:()=>d.uA,isReadable:()=>a,isValidCSSUnit:()=>d.ky,legacyRandom:()=>c,mostReadable:()=>s,names:()=>o.R,numberInputToObject:()=>u.Yt,parseIntFromHex:()=>u.VD,random:()=>g,readability:()=>i,rgbToHex:()=>u.vq,rgbToHsl:()=>u.lC,rgbToHsv:()=>u.py,rgbToRgb:()=>u.rW,rgbaToArgbHex:()=>u.GC,rgbaToHex:()=>u.s,stringInputToObject:()=>d.uz,tinycolor:()=>n.H,toMsFilter:()=>f});var n=r(10274),o=r(48701);function i(t,e){var r=new n.C(t),o=new n.C(e);return(Math.max(r.getLuminance(),o.getLuminance())+.05)/(Math.min(r.getLuminance(),o.getLuminance())+.05)}function a(t,e,r){var n,o;void 0===r&&(r={level:"AA",size:"small"});var a=i(t,e);switch((null!==(n=r.level)&&void 0!==n?n:"AA")+(null!==(o=r.size)&&void 0!==o?o:"small")){case"AAsmall":case"AAAlarge":return a>=4.5;case"AAlarge":return a>=3;case"AAAsmall":return a>=7;default:return!1}}function s(t,e,r){void 0===r&&(r={includeFallbackColors:!1,level:"AA",size:"small"});for(var o=null,u=0,f=r.includeFallbackColors,h=r.level,l=r.size,c=0,d=e;c<d.length;c++){var g=d[c],p=i(t,g);p>u&&(u=p,o=new n.C(g))}return a(t,o,{level:h,size:l})||!f?o:(r.includeFallbackColors=!1,s(t,["#fff","#000"],r))}var u=r(86500);function f(t,e){var r=new n.C(t),o="#"+(0,u.GC)(r.r,r.g,r.b,r.a),i=o,a=r.gradientType?"GradientType = 1, ":"";if(e){var s=new n.C(e);i="#"+(0,u.GC)(s.r,s.g,s.b,s.a)}return"progid:DXImageTransform.Microsoft.gradient(".concat(a,"startColorstr=").concat(o,",endColorstr=").concat(i,")")}var h=r(90279);function l(t,e){var r={r:(0,h.JX)(t.r),g:(0,h.JX)(t.g),b:(0,h.JX)(t.b)};return void 0!==t.a&&(r.a=Number(t.a)),new n.C(r,e)}function c(){return new n.C({r:Math.random(),g:Math.random(),b:Math.random()})}var d=r(1350);function g(t){if(void 0===t&&(t={}),void 0!==t.count&&null!==t.count){var e=t.count,r=[];for(t.count=void 0;e>r.length;)t.count=null,t.seed&&(t.seed+=1),r.push(g(t));return t.count=e,r}var o=function(t,e){var r=v(function(t){var e=parseInt(t,10);if(!Number.isNaN(e)&&e<360&&e>0)return[e,e];if("string"==typeof t){var r=m.find((function(e){return e.name===t}));if(r){var o=b(r);if(o.hueRange)return o.hueRange}var i=new n.C(t);if(i.isValid){var a=i.toHsv().h;return[a,a]}}return[0,360]}(t),e);return r<0&&(r=360+r),r}(t.hue,t.seed),i=function(t,e){if("monochrome"===e.hue)return 0;if("random"===e.luminosity)return v([0,100],e.seed);var r=p(t).saturationRange,n=r[0],o=r[1];switch(e.luminosity){case"bright":n=55;break;case"dark":n=o-10;break;case"light":o=55}return v([n,o],e.seed)}(o,t),a=function(t,e,r){var n=function(t,e){for(var r=p(t).lowerBounds,n=0;n<r.length-1;n++){var o=r[n][0],i=r[n][1],a=r[n+1][0],s=r[n+1][1];if(e>=o&&e<=a){var u=(s-i)/(a-o);return u*e+(i-u*o)}}return 0}(t,e),o=100;switch(r.luminosity){case"dark":o=n+20;break;case"light":n=(o+n)/2;break;case"random":n=0,o=100}return v([n,o],r.seed)}(o,i,t),s={h:o,s:i,v:a};return void 0!==t.alpha&&(s.a=t.alpha),new n.C(s)}function p(t){t>=334&&t<=360&&(t-=360);for(var e=0,r=m;e<r.length;e++){var n=b(r[e]);if(n.hueRange&&t>=n.hueRange[0]&&t<=n.hueRange[1])return n}throw Error("Color not found")}function v(t,e){if(void 0===e)return Math.floor(t[0]+Math.random()*(t[1]+1-t[0]));var r=t[1]||1,n=t[0]||0,o=(e=(9301*e+49297)%233280)/233280;return Math.floor(n+o*(r-n))}function b(t){var e=t.lowerBounds[0][0],r=t.lowerBounds[t.lowerBounds.length-1][0],n=t.lowerBounds[t.lowerBounds.length-1][1],o=t.lowerBounds[0][1];return{name:t.name,hueRange:t.hueRange,lowerBounds:t.lowerBounds,saturationRange:[e,r],brightnessRange:[n,o]}}var m=[{name:"monochrome",hueRange:null,lowerBounds:[[0,0],[100,0]]},{name:"red",hueRange:[-26,18],lowerBounds:[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]},{name:"orange",hueRange:[19,46],lowerBounds:[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]},{name:"yellow",hueRange:[47,62],lowerBounds:[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]},{name:"green",hueRange:[63,178],lowerBounds:[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]},{name:"blue",hueRange:[179,257],lowerBounds:[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]},{name:"purple",hueRange:[258,282],lowerBounds:[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]},{name:"pink",hueRange:[283,334],lowerBounds:[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]}];const y=n.H},90279:(t,e,r)=>{"use strict";function n(t,e){(function(t){return"string"==typeof t&&-1!==t.indexOf(".")&&1===parseFloat(t)})(t)&&(t="100%");var r=function(t){return"string"==typeof t&&-1!==t.indexOf("%")}(t);return t=360===e?t:Math.min(e,Math.max(0,parseFloat(t))),r&&(t=parseInt(String(t*e),10)/100),Math.abs(t-e)<1e-6?1:t=360===e?(t<0?t%e+e:t%e)/parseFloat(String(e)):t%e/parseFloat(String(e))}function o(t){return Math.min(1,Math.max(0,t))}function i(t){return t=parseFloat(t),(isNaN(t)||t<0||t>1)&&(t=1),t}function a(t){return t<=1?"".concat(100*Number(t),"%"):t}function s(t){return 1===t.length?"0"+t:String(t)}r.d(e,{FZ:()=>s,JX:()=>a,V2:()=>o,Yq:()=>i,sh:()=>n})},94184:(t,e)=>{var r;!function(){"use strict";var n={}.hasOwnProperty;function o(){for(var t=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var i=typeof r;if("string"===i||"number"===i)t.push(r);else if(Array.isArray(r)){if(r.length){var a=o.apply(null,r);a&&t.push(a)}}else if("object"===i)if(r.toString===Object.prototype.toString)for(var s in r)n.call(r,s)&&r[s]&&t.push(s);else t.push(r.toString())}}return t.join(" ")}t.exports?(o.default=o,t.exports=o):void 0===(r=function(){return o}.apply(e,[]))||(t.exports=r)}()},73382:(t,e,r)=>{"use strict";function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var s;r.d(e,{E3:()=>et,zy:()=>rt});var u={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-",O:"-o-"};function f(){if(void 0!==s)return s;s="";var t=document.createElement("p").style;for(var e in u)e+"Transform"in t&&(s=e);return s}function h(){return f()?"".concat(f(),"TransitionProperty"):"transitionProperty"}function l(){return f()?"".concat(f(),"Transform"):"transform"}function c(t,e){var r=h();r&&(t.style[r]=e,"transitionProperty"!==r&&(t.style.transitionProperty=e))}function d(t,e){var r=l();r&&(t.style[r]=e,"transform"!==r&&(t.style.transform=e))}var g,p=/matrix\((.*)\)/,v=/matrix3d\((.*)\)/;function b(t){var e=t.style.display;t.style.display="none",t.offsetHeight,t.style.display=e}function m(t,e,r){var n=r;if("object"!==i(e))return void 0!==n?("number"==typeof n&&(n="".concat(n,"px")),void(t.style[e]=n)):g(t,e);for(var o in e)e.hasOwnProperty(o)&&m(t,o,e[o])}function y(t,e){var r=t["page".concat(e?"Y":"X","Offset")],n="scroll".concat(e?"Top":"Left");if("number"!=typeof r){var o=t.document;"number"!=typeof(r=o.documentElement[n])&&(r=o.body[n])}return r}function w(t){return y(t)}function x(t){return y(t,!0)}function M(t){var e=function(t){var e,r,n,o=t.ownerDocument,i=o.body,a=o&&o.documentElement;return e=t.getBoundingClientRect(),r=Math.floor(e.left),n=Math.floor(e.top),{left:r-=a.clientLeft||i.clientLeft||0,top:n-=a.clientTop||i.clientTop||0}}(t),r=t.ownerDocument,n=r.defaultView||r.parentWindow;return e.left+=w(n),e.top+=x(n),e}function S(t){return null!=t&&t==t.window}function k(t){return S(t)?t.document:9===t.nodeType?t:t.ownerDocument}var R=new RegExp("^(".concat(/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,")(?!px)[a-z%]+$"),"i"),A=/^(top|right|bottom|left)$/;function C(t,e){return"left"===t?e.useCssRight?"right":t:e.useCssBottom?"bottom":t}function H(t){return"left"===t?"right":"right"===t?"left":"top"===t?"bottom":"bottom"===t?"top":void 0}function T(t,e,r){"static"===m(t,"position")&&(t.style.position="relative");var n=-999,o=-999,i=C("left",r),a=C("top",r),s=H(i),u=H(a);"left"!==i&&(n=999),"top"!==a&&(o=999);var f,l="",d=M(t);("left"in e||"top"in e)&&(l=(f=t).style.transitionProperty||f.style[h()]||"",c(t,"none")),"left"in e&&(t.style[s]="",t.style[i]="".concat(n,"px")),"top"in e&&(t.style[u]="",t.style[a]="".concat(o,"px")),b(t);var g=M(t),p={};for(var v in e)if(e.hasOwnProperty(v)){var y=C(v,r),w="left"===v?n:o,x=d[v]-g[v];p[y]=y===v?w+x:w-x}m(t,p),b(t),("left"in e||"top"in e)&&c(t,l);var S={};for(var k in e)if(e.hasOwnProperty(k)){var R=C(k,r),A=e[k]-d[k];S[R]=k===R?p[R]+A:p[R]-A}m(t,S)}function W(t,e){for(var r=0;r<t.length;r++)e(t[r])}function F(t){return"border-box"===g(t,"boxSizing")}"undefined"!=typeof window&&(g=window.getComputedStyle?function(t,e,r){var n=r,o="",i=k(t);return(n=n||i.defaultView.getComputedStyle(t,null))&&(o=n.getPropertyValue(e)||n[e]),o}:function(t,e){var r=t.currentStyle&&t.currentStyle[e];if(R.test(r)&&!A.test(e)){var n=t.style,o=n.left,i=t.runtimeStyle.left;t.runtimeStyle.left=t.currentStyle.left,n.left="fontSize"===e?"1em":r||0,r=n.pixelLeft+"px",n.left=o,t.runtimeStyle.left=i}return""===r?"auto":r});var O=["margin","border","padding"];function j(t,e,r){var n,o={},i=t.style;for(n in e)e.hasOwnProperty(n)&&(o[n]=i[n],i[n]=e[n]);for(n in r.call(t),e)e.hasOwnProperty(n)&&(i[n]=o[n])}function P(t,e,r){var n,o,i,a=0;for(o=0;o<e.length;o++)if(n=e[o])for(i=0;i<r.length;i++){var s;s="border"===n?"".concat(n).concat(r[i],"Width"):n+r[i],a+=parseFloat(g(t,s))||0}return a}var V={getParent:function(t){var e=t;do{e=11===e.nodeType&&e.host?e.host:e.parentNode}while(e&&1!==e.nodeType&&9!==e.nodeType);return e}};function B(t,e,r){var n=r;if(S(t))return"width"===e?V.viewportWidth(t):V.viewportHeight(t);if(9===t.nodeType)return"width"===e?V.docWidth(t):V.docHeight(t);var o="width"===e?["Left","Right"]:["Top","Bottom"],i="width"===e?Math.floor(t.getBoundingClientRect().width):Math.floor(t.getBoundingClientRect().height),a=F(t),s=0;(null==i||i<=0)&&(i=void 0,(null==(s=g(t,e))||Number(s)<0)&&(s=t.style[e]||0),s=parseFloat(s)||0),void 0===n&&(n=a?1:-1);var u=void 0!==i||a,f=i||s;return-1===n?u?f-P(t,["border","padding"],o):s:u?1===n?f:f+(2===n?-P(t,["border"],o):P(t,["margin"],o)):s+P(t,O.slice(n),o)}W(["Width","Height"],(function(t){V["doc".concat(t)]=function(e){var r=e.document;return Math.max(r.documentElement["scroll".concat(t)],r.body["scroll".concat(t)],V["viewport".concat(t)](r))},V["viewport".concat(t)]=function(e){var r="client".concat(t),n=e.document,o=n.body,i=n.documentElement[r];return"CSS1Compat"===n.compatMode&&i||o&&o[r]||i}}));var D={position:"absolute",visibility:"hidden",display:"block"};function E(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];var n,o=e[0];return 0!==o.offsetWidth?n=B.apply(void 0,e):j(o,D,(function(){n=B.apply(void 0,e)})),n}function X(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}W(["width","height"],(function(t){var e=t.charAt(0).toUpperCase()+t.slice(1);V["outer".concat(e)]=function(e,r){return e&&E(e,t,r?0:1)};var r="width"===t?["Left","Right"]:["Top","Bottom"];V[t]=function(e,n){var o=n;return void 0!==o?e?(F(e)&&(o+=P(e,["padding","border"],r)),m(e,t,o)):void 0:e&&E(e,t,-1)}}));var L={getWindow:function(t){if(t&&t.document&&t.setTimeout)return t;var e=t.ownerDocument||t;return e.defaultView||e.parentWindow},getDocument:k,offset:function(t,e,r){if(void 0===e)return M(t);!function(t,e,r){if(r.ignoreShake){var n=M(t),o=n.left.toFixed(0),i=n.top.toFixed(0),a=e.left.toFixed(0),s=e.top.toFixed(0);if(o===a&&i===s)return}r.useCssRight||r.useCssBottom?T(t,e,r):r.useCssTransform&&l()in document.body.style?function(t,e){var r=M(t),n=function(t){var e=window.getComputedStyle(t,null),r=e.getPropertyValue("transform")||e.getPropertyValue(l());if(r&&"none"!==r){var n=r.replace(/[^0-9\-.,]/g,"").split(",");return{x:parseFloat(n[12]||n[4],0),y:parseFloat(n[13]||n[5],0)}}return{x:0,y:0}}(t),o={x:n.x,y:n.y};"left"in e&&(o.x=n.x+e.left-r.left),"top"in e&&(o.y=n.y+e.top-r.top),function(t,e){var r=window.getComputedStyle(t,null),n=r.getPropertyValue("transform")||r.getPropertyValue(l());if(n&&"none"!==n){var o,i=n.match(p);i?((o=(i=i[1]).split(",").map((function(t){return parseFloat(t,10)})))[4]=e.x,o[5]=e.y,d(t,"matrix(".concat(o.join(","),")"))):((o=n.match(v)[1].split(",").map((function(t){return parseFloat(t,10)})))[12]=e.x,o[13]=e.y,d(t,"matrix3d(".concat(o.join(","),")")))}else d(t,"translateX(".concat(e.x,"px) translateY(").concat(e.y,"px) translateZ(0)"))}(t,o)}(t,e):T(t,e,r)}(t,e,r||{})},isWindow:S,each:W,css:m,clone:function(t){var e,r={};for(e in t)t.hasOwnProperty(e)&&(r[e]=t[e]);if(t.overflow)for(e in t)t.hasOwnProperty(e)&&(r.overflow[e]=t.overflow[e]);return r},mix:X,getWindowScrollLeft:function(t){return w(t)},getWindowScrollTop:function(t){return x(t)},merge:function(){for(var t={},e=0;e<arguments.length;e++)L.mix(t,e<0||arguments.length<=e?void 0:arguments[e]);return t},viewportWidth:0,viewportHeight:0};X(L,V);var Y=L.getParent;function q(t){if(L.isWindow(t)||9===t.nodeType)return null;var e,r=L.getDocument(t).body,n=L.css(t,"position");if("fixed"!==n&&"absolute"!==n)return"html"===t.nodeName.toLowerCase()?null:Y(t);for(e=Y(t);e&&e!==r&&9!==e.nodeType;e=Y(e))if("static"!==(n=L.css(e,"position")))return e;return null}var z=L.getParent;function N(t,e){for(var r={left:0,right:1/0,top:0,bottom:1/0},n=q(t),o=L.getDocument(t),i=o.defaultView||o.parentWindow,a=o.body,s=o.documentElement;n;){if(-1!==navigator.userAgent.indexOf("MSIE")&&0===n.clientWidth||n===a||n===s||"visible"===L.css(n,"overflow")){if(n===a||n===s)break}else{var u=L.offset(n);u.left+=n.clientLeft,u.top+=n.clientTop,r.top=Math.max(r.top,u.top),r.right=Math.min(r.right,u.left+n.clientWidth),r.bottom=Math.min(r.bottom,u.top+n.clientHeight),r.left=Math.max(r.left,u.left)}n=q(n)}var f=null;L.isWindow(t)||9===t.nodeType||(f=t.style.position,"absolute"===L.css(t,"position")&&(t.style.position="fixed"));var h=L.getWindowScrollLeft(i),l=L.getWindowScrollTop(i),c=L.viewportWidth(i),d=L.viewportHeight(i),g=s.scrollWidth,p=s.scrollHeight,v=window.getComputedStyle(a);if("hidden"===v.overflowX&&(g=i.innerWidth),"hidden"===v.overflowY&&(p=i.innerHeight),t.style&&(t.style.position=f),e||function(t){if(L.isWindow(t)||9===t.nodeType)return!1;var e=L.getDocument(t),r=e.body,n=null;for(n=z(t);n&&n!==r&&n!==e;n=z(n))if("fixed"===L.css(n,"position"))return!0;return!1}(t))r.left=Math.max(r.left,h),r.top=Math.max(r.top,l),r.right=Math.min(r.right,h+c),r.bottom=Math.min(r.bottom,l+d);else{var b=Math.max(g,h+c);r.right=Math.min(r.right,b);var m=Math.max(p,l+d);r.bottom=Math.min(r.bottom,m)}return r.top>=0&&r.left>=0&&r.bottom>r.top&&r.right>r.left?r:null}function I(t){var e,r,n;if(L.isWindow(t)||9===t.nodeType){var o=L.getWindow(t);e={left:L.getWindowScrollLeft(o),top:L.getWindowScrollTop(o)},r=L.viewportWidth(o),n=L.viewportHeight(o)}else e=L.offset(t),r=L.outerWidth(t),n=L.outerHeight(t);return e.width=r,e.height=n,e}function Z(t,e){var r=e.charAt(0),n=e.charAt(1),o=t.width,i=t.height,a=t.left,s=t.top;return"c"===r?s+=i/2:"b"===r&&(s+=i),"c"===n?a+=o/2:"r"===n&&(a+=o),{left:a,top:s}}function J(t,e,r,n,o){var i=Z(e,r[1]),a=Z(t,r[0]),s=[a.left-i.left,a.top-i.top];return{left:Math.round(t.left-s[0]+n[0]-o[0]),top:Math.round(t.top-s[1]+n[1]-o[1])}}function $(t,e,r){return t.left<r.left||t.left+e.width>r.right}function G(t,e,r){return t.top<r.top||t.top+e.height>r.bottom}function _(t,e,r){var n=[];return L.each(t,(function(t){n.push(t.replace(e,(function(t){return r[t]})))})),n}function U(t,e){return t[e]=-t[e],t}function K(t,e){return(/%$/.test(t)?parseInt(t.substring(0,t.length-1),10)/100*e:parseInt(t,10))||0}function Q(t,e){t[0]=K(t[0],e.width),t[1]=K(t[1],e.height)}function tt(t,e,r,n){var o=r.points,i=r.offset||[0,0],a=r.targetOffset||[0,0],s=r.overflow,u=r.source||t;i=[].concat(i),a=[].concat(a);var f={},h=0,l=N(u,!(!(s=s||{})||!s.alwaysByViewport)),c=I(u);Q(i,c),Q(a,e);var d=J(c,e,o,i,a),g=L.merge(c,d);if(l&&(s.adjustX||s.adjustY)&&n){if(s.adjustX&&$(d,c,l)){var p=_(o,/[lr]/gi,{l:"r",r:"l"}),v=U(i,0),b=U(a,0);(function(t,e,r){return t.left>r.right||t.left+e.width<r.left})(J(c,e,p,v,b),c,l)||(h=1,o=p,i=v,a=b)}if(s.adjustY&&G(d,c,l)){var m=_(o,/[tb]/gi,{t:"b",b:"t"}),y=U(i,1),w=U(a,1);(function(t,e,r){return t.top>r.bottom||t.top+e.height<r.top})(J(c,e,m,y,w),c,l)||(h=1,o=m,i=y,a=w)}h&&(d=J(c,e,o,i,a),L.mix(g,d));var x=$(d,c,l),M=G(d,c,l);if(x||M){var S=o;x&&(S=_(o,/[lr]/gi,{l:"r",r:"l"})),M&&(S=_(o,/[tb]/gi,{t:"b",b:"t"})),o=S,i=r.offset||[0,0],a=r.targetOffset||[0,0]}f.adjustX=s.adjustX&&x,f.adjustY=s.adjustY&&M,(f.adjustX||f.adjustY)&&(g=function(t,e,r,n){var o=L.clone(t),i={width:e.width,height:e.height};return n.adjustX&&o.left<r.left&&(o.left=r.left),n.resizeWidth&&o.left>=r.left&&o.left+i.width>r.right&&(i.width-=o.left+i.width-r.right),n.adjustX&&o.left+i.width>r.right&&(o.left=Math.max(r.right-i.width,r.left)),n.adjustY&&o.top<r.top&&(o.top=r.top),n.resizeHeight&&o.top>=r.top&&o.top+i.height>r.bottom&&(i.height-=o.top+i.height-r.bottom),n.adjustY&&o.top+i.height>r.bottom&&(o.top=Math.max(r.bottom-i.height,r.top)),L.mix(o,i)}(d,c,l,f))}return g.width!==c.width&&L.css(u,"width",L.width(u)+g.width-c.width),g.height!==c.height&&L.css(u,"height",L.height(u)+g.height-c.height),L.offset(u,{left:g.left,top:g.top},{useCssRight:r.useCssRight,useCssBottom:r.useCssBottom,useCssTransform:r.useCssTransform,ignoreShake:r.ignoreShake}),{points:o,offset:i,targetOffset:a,overflow:f}}function et(t,e,r){var n=r.target||e,o=I(n),i=!function(t,e){var r=N(t,e),n=I(t);return!r||n.left+n.width<=r.left||n.top+n.height<=r.top||n.left>=r.right||n.top>=r.bottom}(n,r.overflow&&r.overflow.alwaysByViewport);return tt(t,o,r,i)}function rt(t,e,r){var n,i,a=L.getDocument(t),s=a.defaultView||a.parentWindow,u=L.getWindowScrollLeft(s),f=L.getWindowScrollTop(s),h=L.viewportWidth(s),l=L.viewportHeight(s),c={left:n="pageX"in e?e.pageX:u+e.clientX,top:i="pageY"in e?e.pageY:f+e.clientY,width:0,height:0},d=n>=0&&n<=u+h&&i>=0&&i<=f+l,g=[r.points[0],"cc"];return tt(t,c,o(o({},r),{},{points:g}),d)}et.__getOffsetParent=q,et.__getVisibleRectForElement=N},18446:(t,e,r)=>{var n=r(90939);t.exports=function(t,e){return n(t,e)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,