"use strict";(self.webpackChunkmindmap=self.webpackChunkmindmap||[]).push([[831],{62906:(e,n,t)=>{t.d(n,{Z:()=>o});const o={items_per_page:"/ page",jump_to:"Go to",jump_to_confirm:"confirm",page:"Page",prev_page:"Previous Page",next_page:"Next Page",prev_5:"Previous 5 Pages",next_5:"Next 5 Pages",prev_3:"Previous 3 Pages",next_3:"Next 3 Pages",page_size:"Page Size"}},81626:(e,n,t)=>{t.d(n,{Z:()=>o});const o={items_per_page:"条/页",jump_to:"跳至",jump_to_confirm:"确定",page:"页",prev_page:"上一页",next_page:"下一页",prev_5:"向前 5 页",next_5:"向后 5 页",prev_3:"向前 3 页",next_3:"向后 3 页",page_size:"页码"}},62273:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,n.default={items_per_page:"/ page",jump_to:"Go to",jump_to_confirm:"confirm",page:"Page",prev_page:"Previous Page",next_page:"Next Page",prev_5:"Previous 5 Pages",next_5:"Next 5 Pages",prev_3:"Previous 3 Pages",next_3:"Next 3 Pages",page_size:"Page Size"}},18758:(e,n,t)=>{t.d(n,{Z:()=>o});const o={locale:"en_US",today:"Today",now:"Now",backToToday:"Back to today",ok:"OK",clear:"Clear",month:"Month",year:"Year",timeSelect:"select time",dateSelect:"select date",weekSelect:"Choose a week",monthSelect:"Choose a month",yearSelect:"Choose a year",decadeSelect:"Choose a decade",yearFormat:"YYYY",dateFormat:"M/D/YYYY",dayFormat:"D",dateTimeFormat:"M/D/YYYY HH:mm:ss",monthBeforeYear:!0,previousMonth:"Previous month (PageUp)",nextMonth:"Next month (PageDown)",previousYear:"Last year (Control + left)",nextYear:"Next year (Control + right)",previousDecade:"Last decade",nextDecade:"Next decade",previousCentury:"Last century",nextCentury:"Next century"}},42969:(e,n,t)=>{t.d(n,{Z:()=>o});const o={locale:"zh_CN",today:"今天",now:"此刻",backToToday:"返回今天",ok:"确定",timeSelect:"选择时间",dateSelect:"选择日期",weekSelect:"选择周",clear:"清除",month:"月",year:"年",previousMonth:"上个月 (翻页上键)",nextMonth:"下个月 (翻页下键)",monthSelect:"选择月份",yearSelect:"选择年份",decadeSelect:"选择年代",yearFormat:"YYYY年",dayFormat:"D日",dateFormat:"YYYY年M月D日",dateTimeFormat:"YYYY年M月D日 HH时mm分ss秒",previousYear:"上一年 (Control键加左方向键)",nextYear:"下一年 (Control键加右方向键)",previousDecade:"上一年代",nextDecade:"下一年代",previousCentury:"上一世纪",nextCentury:"下一世纪"}},27590:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;n.default={locale:"en_US",today:"Today",now:"Now",backToToday:"Back to today",ok:"OK",clear:"Clear",month:"Month",year:"Year",timeSelect:"select time",dateSelect:"select date",weekSelect:"Choose a week",monthSelect:"Choose a month",yearSelect:"Choose a year",decadeSelect:"Choose a decade",yearFormat:"YYYY",dateFormat:"M/D/YYYY",dayFormat:"D",dateTimeFormat:"M/D/YYYY HH:mm:ss",monthBeforeYear:!0,previousMonth:"Previous month (PageUp)",nextMonth:"Next month (PageDown)",previousYear:"Last year (Control + left)",nextYear:"Next year (Control + right)",previousDecade:"Last decade",nextDecade:"Next decade",previousCentury:"Last century",nextCentury:"Next century"}},48717:(e,n,t)=>{t.d(n,{Z:()=>w});var o=t(87462),r=t(67294),a=t(50344),u=(t(80334),t(1413)),i=t(42550),l=t(34203),c=t(91033),s=new Map,d=new c.Z((function(e){e.forEach((function(e){var n,t=e.target;null===(n=s.get(t))||void 0===n||n.forEach((function(e){return e(t)}))}))})),p=t(15671),f=t(43144),v=t(79340),m=t(98557),h=function(e){(0,v.Z)(t,e);var n=(0,m.Z)(t);function t(){return(0,p.Z)(this,t),n.apply(this,arguments)}return(0,f.Z)(t,[{key:"render",value:function(){return this.props.children}}]),t}(r.Component),g=r.createContext(null);function b(e){var n=e.children,t=e.disabled,o=r.useRef(null),a=r.useRef(null),c=r.useContext(g),p="function"==typeof n,f=p?n(o):n,v=r.useRef({width:-1,height:-1,offsetWidth:-1,offsetHeight:-1}),m=!p&&r.isValidElement(f)&&(0,i.Yr)(f),b=m?f.ref:null,y=r.useMemo((function(){return(0,i.sQ)(b,o)}),[b,o]),w=r.useRef(e);w.current=e;var Z=r.useCallback((function(e){var n=w.current,t=n.onResize,o=n.data,r=e.getBoundingClientRect(),a=r.width,i=r.height,l=e.offsetWidth,s=e.offsetHeight,d=Math.floor(a),p=Math.floor(i);if(v.current.width!==d||v.current.height!==p||v.current.offsetWidth!==l||v.current.offsetHeight!==s){var f={width:d,height:p,offsetWidth:l,offsetHeight:s};v.current=f;var m=l===Math.round(a)?a:l,h=s===Math.round(i)?i:s,g=(0,u.Z)((0,u.Z)({},f),{},{offsetWidth:m,offsetHeight:h});null==c||c(g,e,o),t&&Promise.resolve().then((function(){t(g,e)}))}}),[]);return r.useEffect((function(){var e,n,r=(0,l.Z)(o.current)||(0,l.Z)(a.current);return r&&!t&&(e=r,n=Z,s.has(e)||(s.set(e,new Set),d.observe(e)),s.get(e).add(n)),function(){return function(e,n){s.has(e)&&(s.get(e).delete(n),s.get(e).size||(d.unobserve(e),s.delete(e)))}(r,Z)}}),[o.current,t]),r.createElement(h,{ref:a},m?r.cloneElement(f,{ref:y}):f)}function y(e){var n=e.children;return("function"==typeof n?[n]:(0,a.Z)(n)).map((function(n,t){var a=(null==n?void 0:n.key)||"".concat("rc-observer-key","-").concat(t);return r.createElement(b,(0,o.Z)({},e,{key:a}),n)}))}y.Collection=function(e){var n=e.children,t=e.onBatchResize,o=r.useRef(0),a=r.useRef([]),u=r.useContext(g),i=r.useCallback((function(e,n,r){o.current+=1;var i=o.current;a.current.push({size:e,element:n,data:r}),Promise.resolve().then((function(){i===o.current&&(null==t||t(a.current),a.current=[])})),null==u||u(e,n,r)}),[t,u]);return r.createElement(g.Provider,{value:i},n)};const w=y},20949:(e,n,t)=>{t.d(n,{Xo:()=>le,Wx:()=>se,ZP:()=>Se});var o=t(87462),r=t(93433),a=t(4942),u=t(1413),i=t(29439),l=t(44925),c=t(71002),s=t(76632),d=t(80334),p=t(67294),f=t(94184),v=t.n(f),m=t(15105),h=t(31131),g=t(42550),b=t(8410),y=t(84506);function w(e,n){var t,o=e.key;return"value"in e&&(t=e.value),null!=o?o:void 0!==t?t:"rc-index-key-".concat(n)}function Z(e,n){var t=e||{};return{label:t.label||(n?"children":"label"),value:t.value||"value",options:t.options||"options"}}function C(e){var n=(0,u.Z)({},e);return"props"in n||Object.defineProperty(n,"props",{get:function(){return(0,d.ZP)(!1,"Return type is option instead of Option instance. Please read value directly instead of reading from `props`."),n}}),n}var S=t(74768),E=["prefixCls","disabled","visible","children","popupElement","containerWidth","animation","transitionName","dropdownStyle","dropdownClassName","direction","placement","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","getPopupContainer","empty","getTriggerDOMNode","onPopupVisibleChange","onPopupMouseEnter"],x=function(e,n){var t=e.prefixCls,r=(e.disabled,e.visible),i=e.children,c=e.popupElement,s=e.containerWidth,d=e.animation,f=e.transitionName,m=e.dropdownStyle,h=e.dropdownClassName,g=e.direction,b=void 0===g?"ltr":g,y=e.placement,w=e.dropdownMatchSelectWidth,Z=e.dropdownRender,C=e.dropdownAlign,x=e.getPopupContainer,P=e.empty,D=e.getTriggerDOMNode,N=e.onPopupVisibleChange,M=e.onPopupMouseEnter,I=(0,l.Z)(e,E),k="".concat(t,"-dropdown"),_=c;Z&&(_=Z(c));var R=p.useMemo((function(){return function(e){var n=!0===e?0:1;return{bottomLeft:{points:["tl","bl"],offset:[0,4],overflow:{adjustX:n,adjustY:1}},bottomRight:{points:["tr","br"],offset:[0,4],overflow:{adjustX:n,adjustY:1}},topLeft:{points:["bl","tl"],offset:[0,-4],overflow:{adjustX:n,adjustY:1}},topRight:{points:["br","tr"],offset:[0,-4],overflow:{adjustX:n,adjustY:1}}}}(w)}),[w]),T=d?"".concat(k,"-").concat(d):f,O=p.useRef(null);p.useImperativeHandle(n,(function(){return{getPopupElement:function(){return O.current}}}));var Y=(0,u.Z)({minWidth:s},m);return"number"==typeof w?Y.width=w:w&&(Y.width=s),p.createElement(S.Z,(0,o.Z)({},I,{showAction:N?["click"]:[],hideAction:N?["click"]:[],popupPlacement:y||("rtl"===b?"bottomRight":"bottomLeft"),builtinPlacements:R,prefixCls:k,popupTransitionName:T,popup:p.createElement("div",{ref:O,onMouseEnter:M},_),popupAlign:C,popupVisible:r,getPopupContainer:x,popupClassName:v()(h,(0,a.Z)({},"".concat(k,"-empty"),P)),popupStyle:Y,getTriggerDOMNode:D,onPopupVisibleChange:N}),i)},P=p.forwardRef(x);P.displayName="SelectTrigger";const D=P;var N=t(64217),M=t(19214);const I=function(e){var n,t=e.className,o=e.customizeIcon,r=e.customizeIconProps,a=e.onMouseDown,u=e.onClick,i=e.children;return n="function"==typeof o?o(r):o,p.createElement("span",{className:t,onMouseDown:function(e){e.preventDefault(),a&&a(e)},style:{userSelect:"none",WebkitUserSelect:"none"},unselectable:"on",onClick:u,"aria-hidden":!0},void 0!==n?n:p.createElement("span",{className:v()(t.split(/\s+/).map((function(e){return"".concat(e,"-icon")})))},i))};var k=function(e,n){var t,o,r=e.prefixCls,a=e.id,i=e.inputElement,l=e.disabled,c=e.tabIndex,s=e.autoFocus,f=e.autoComplete,m=e.editable,h=e.activeDescendantId,b=e.value,y=e.maxLength,w=e.onKeyDown,Z=e.onMouseDown,C=e.onChange,S=e.onPaste,E=e.onCompositionStart,x=e.onCompositionEnd,P=e.open,D=e.attrs,N=i||p.createElement("input",null),M=N,I=M.ref,k=M.props,_=k.onKeyDown,R=k.onChange,T=k.onMouseDown,O=k.onCompositionStart,Y=k.onCompositionEnd,F=k.style;return(0,d.Kp)(!("maxLength"in N.props),"Passing 'maxLength' to input element directly may not work because input in BaseSelect is controlled."),p.cloneElement(N,(0,u.Z)((0,u.Z)((0,u.Z)({type:"search"},k),{},{id:a,ref:(0,g.sQ)(n,I),disabled:l,tabIndex:c,autoComplete:f||"off",autoFocus:s,className:v()("".concat(r,"-selection-search-input"),null===(t=N)||void 0===t||null===(o=t.props)||void 0===o?void 0:o.className),role:"combobox","aria-expanded":P,"aria-haspopup":"listbox","aria-owns":"".concat(a,"_list"),"aria-autocomplete":"list","aria-controls":"".concat(a,"_list"),"aria-activedescendant":h},D),{},{value:m?b:"",maxLength:y,readOnly:!m,unselectable:m?null:"on",style:(0,u.Z)((0,u.Z)({},F),{},{opacity:m?null:0}),onKeyDown:function(e){w(e),_&&_(e)},onMouseDown:function(e){Z(e),T&&T(e)},onChange:function(e){C(e),R&&R(e)},onCompositionStart:function(e){E(e),O&&O(e)},onCompositionEnd:function(e){x(e),Y&&Y(e)},onPaste:S}))},_=p.forwardRef(k);_.displayName="Input";const R=_;function T(e){return Array.isArray(e)?e:void 0!==e?[e]:[]}var O="undefined"!=typeof window&&window.document&&window.document.documentElement;function Y(e){var n;return null!==(n=e.key)&&void 0!==n?n:e.value}var F=function(e){e.preventDefault(),e.stopPropagation()};const V=function(e){var n,t,o=e.id,r=e.prefixCls,u=e.values,l=e.open,c=e.searchValue,s=e.inputRef,d=e.placeholder,f=e.disabled,m=e.mode,h=e.showSearch,g=e.autoFocus,b=e.autoComplete,y=e.activeDescendantId,w=e.tabIndex,Z=e.removeIcon,C=e.maxTagCount,S=e.maxTagTextLength,E=e.maxTagPlaceholder,x=void 0===E?function(e){return"+ ".concat(e.length," ...")}:E,P=e.tagRender,D=e.onToggleOpen,k=e.onRemove,_=e.onInputChange,T=e.onInputPaste,V=e.onInputKeyDown,A=e.onInputMouseDown,L=e.onInputCompositionStart,K=e.onInputCompositionEnd,W=p.useRef(null),H=(0,p.useState)(0),z=(0,i.Z)(H,2),j=z[0],U=z[1],B=(0,p.useState)(!1),G=(0,i.Z)(B,2),X=G[0],Q=G[1],J="".concat(r,"-selection"),$=l||"tags"===m?c:"",q="tags"===m||h&&(l||X);function ee(e,n,t,o,r){return p.createElement("span",{className:v()("".concat(J,"-item"),(0,a.Z)({},"".concat(J,"-item-disabled"),t)),title:"string"==typeof e||"number"==typeof e?e.toString():void 0},p.createElement("span",{className:"".concat(J,"-item-content")},n),o&&p.createElement(I,{className:"".concat(J,"-item-remove"),onMouseDown:F,onClick:r,customizeIcon:Z},"×"))}n=function(){U(W.current.scrollWidth)},t=[$],O?p.useLayoutEffect(n,t):p.useEffect(n,t);var ne=p.createElement("div",{className:"".concat(J,"-search"),style:{width:j},onFocus:function(){Q(!0)},onBlur:function(){Q(!1)}},p.createElement(R,{ref:s,open:l,prefixCls:r,id:o,inputElement:null,disabled:f,autoFocus:g,autoComplete:b,editable:q,activeDescendantId:y,value:$,onKeyDown:V,onMouseDown:A,onChange:_,onPaste:T,onCompositionStart:L,onCompositionEnd:K,tabIndex:w,attrs:(0,N.Z)(e,!0)}),p.createElement("span",{ref:W,className:"".concat(J,"-search-mirror"),"aria-hidden":!0},$," ")),te=p.createElement(M.Z,{prefixCls:"".concat(J,"-overflow"),data:u,renderItem:function(e){var n=e.disabled,t=e.label,o=e.value,r=!f&&!n,a=t;if("number"==typeof S&&("string"==typeof t||"number"==typeof t)){var u=String(a);u.length>S&&(a="".concat(u.slice(0,S),"..."))}var i=function(n){n&&n.stopPropagation(),k(e)};return"function"==typeof P?function(e,n,t,o,r){return p.createElement("span",{onMouseDown:function(e){F(e),D(!l)}},P({label:n,value:e,disabled:t,closable:o,onClose:r}))}(o,a,n,r,i):ee(t,a,n,r,i)},renderRest:function(e){var n="function"==typeof x?x(e):x;return ee(n,n,!1)},suffix:ne,itemKey:Y,maxCount:C});return p.createElement(p.Fragment,null,te,!u.length&&!$&&p.createElement("span",{className:"".concat(J,"-placeholder")},d))},A=function(e){var n=e.inputElement,t=e.prefixCls,o=e.id,r=e.inputRef,a=e.disabled,u=e.autoFocus,l=e.autoComplete,c=e.activeDescendantId,s=e.mode,d=e.open,f=e.values,v=e.placeholder,m=e.tabIndex,h=e.showSearch,g=e.searchValue,b=e.activeValue,y=e.maxLength,w=e.onInputKeyDown,Z=e.onInputMouseDown,C=e.onInputChange,S=e.onInputPaste,E=e.onInputCompositionStart,x=e.onInputCompositionEnd,P=p.useState(!1),D=(0,i.Z)(P,2),M=D[0],I=D[1],k="combobox"===s,_=k||h,T=f[0],O=g||"";k&&b&&!M&&(O=b),p.useEffect((function(){k&&I(!1)}),[k,b]);var Y=!("combobox"!==s&&!d&&!h||!O),F=!T||"string"!=typeof T.label&&"number"!=typeof T.label?void 0:T.label.toString();return p.createElement(p.Fragment,null,p.createElement("span",{className:"".concat(t,"-selection-search")},p.createElement(R,{ref:r,prefixCls:t,id:o,open:d,inputElement:n,disabled:a,autoFocus:u,autoComplete:l,editable:_,activeDescendantId:c,value:O,onKeyDown:w,onMouseDown:Z,onChange:function(e){I(!0),C(e)},onPaste:S,onCompositionStart:E,onCompositionEnd:x,tabIndex:m,attrs:(0,N.Z)(e,!0),maxLength:k?y:void 0})),!k&&T&&!Y&&p.createElement("span",{className:"".concat(t,"-selection-item"),title:F},T.label),function(){if(T)return null;var e=Y?{visibility:"hidden"}:void 0;return p.createElement("span",{className:"".concat(t,"-selection-placeholder"),style:e},v)}())};function L(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:250,n=p.useRef(null),t=p.useRef(null);function o(o){(o||null===n.current)&&(n.current=o),window.clearTimeout(t.current),t.current=window.setTimeout((function(){n.current=null}),e)}return p.useEffect((function(){return function(){window.clearTimeout(t.current)}}),[]),[function(){return n.current},o]}var K=function(e,n){var t=(0,p.useRef)(null),r=(0,p.useRef)(!1),a=e.prefixCls,u=e.open,l=e.mode,c=e.showSearch,s=e.tokenWithEnter,d=e.onSearch,f=e.onSearchSubmit,v=e.onToggleOpen,h=e.onInputKeyDown,g=e.domRef;p.useImperativeHandle(n,(function(){return{focus:function(){t.current.focus()},blur:function(){t.current.blur()}}}));var b=L(0),y=(0,i.Z)(b,2),w=y[0],Z=y[1],C=(0,p.useRef)(null),S=function(e){!1!==d(e,!0,r.current)&&v(!0)},E={inputRef:t,onInputKeyDown:function(e){var n,t=e.which;t!==m.Z.UP&&t!==m.Z.DOWN||e.preventDefault(),h&&h(e),t!==m.Z.ENTER||"tags"!==l||r.current||u||null==f||f(e.target.value),n=t,[m.Z.ESC,m.Z.SHIFT,m.Z.BACKSPACE,m.Z.TAB,m.Z.WIN_KEY,m.Z.ALT,m.Z.META,m.Z.WIN_KEY_RIGHT,m.Z.CTRL,m.Z.SEMICOLON,m.Z.EQUALS,m.Z.CAPS_LOCK,m.Z.CONTEXT_MENU,m.Z.F1,m.Z.F2,m.Z.F3,m.Z.F4,m.Z.F5,m.Z.F6,m.Z.F7,m.Z.F8,m.Z.F9,m.Z.F10,m.Z.F11,m.Z.F12].includes(n)||v(!0)},onInputMouseDown:function(){Z(!0)},onInputChange:function(e){var n=e.target.value;if(s&&C.current&&/[\r\n]/.test(C.current)){var t=C.current.replace(/[\r\n]+$/,"").replace(/\r\n/g," ").replace(/[\r\n]/g," ");n=n.replace(t,C.current)}C.current=null,S(n)},onInputPaste:function(e){var n=e.clipboardData.getData("text");C.current=n},onInputCompositionStart:function(){r.current=!0},onInputCompositionEnd:function(e){r.current=!1,"combobox"!==l&&S(e.target.value)}},x="multiple"===l||"tags"===l?p.createElement(V,(0,o.Z)({},e,E)):p.createElement(A,(0,o.Z)({},e,E));return p.createElement("div",{ref:g,className:"".concat(a,"-selector"),onClick:function(e){e.target!==t.current&&(void 0!==document.body.style.msTouchAction?setTimeout((function(){t.current.focus()})):t.current.focus())},onMouseDown:function(e){var n=w();e.target===t.current||n||e.preventDefault(),("combobox"===l||c&&n)&&u||(u&&d("",!0,!1),v())}},x)},W=p.forwardRef(K);W.displayName="Selector";const H=W;var z=p.createContext(null),j=["id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","notFoundContent","onClear","mode","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","showArrow","inputIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","getPopupContainer","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown"],U=["value","onChange","removeIcon","placeholder","autoFocus","maxTagCount","maxTagTextLength","maxTagPlaceholder","choiceTransitionName","onInputKeyDown","onPopupScroll","tabIndex"];function B(e){return"tags"===e||"multiple"===e}var G=p.forwardRef((function(e,n){var t,d,f=e.id,w=e.prefixCls,Z=e.className,C=e.showSearch,S=e.tagRender,E=e.direction,x=e.omitDomProps,P=e.displayValues,N=e.onDisplayValuesChange,M=e.emptyOptions,k=e.notFoundContent,_=void 0===k?"Not Found":k,R=e.onClear,T=e.mode,O=e.disabled,Y=e.loading,F=e.getInputElement,V=e.getRawInputElement,A=e.open,K=e.defaultOpen,W=e.onDropdownVisibleChange,G=e.activeValue,X=e.onActiveValueChange,Q=e.activeDescendantId,J=e.searchValue,$=e.onSearch,q=e.onSearchSplit,ee=e.tokenSeparators,ne=e.allowClear,te=e.showArrow,oe=e.inputIcon,re=e.clearIcon,ae=e.OptionList,ue=e.animation,ie=e.transitionName,le=e.dropdownStyle,ce=e.dropdownClassName,se=e.dropdownMatchSelectWidth,de=e.dropdownRender,pe=e.dropdownAlign,fe=e.placement,ve=e.getPopupContainer,me=e.showAction,he=void 0===me?[]:me,ge=e.onFocus,be=e.onBlur,ye=e.onKeyUp,we=e.onKeyDown,Ze=e.onMouseDown,Ce=(0,l.Z)(e,j),Se=B(T),Ee=(void 0!==C?C:Se)||"combobox"===T,xe=(0,u.Z)({},Ce);U.forEach((function(e){delete xe[e]})),null==x||x.forEach((function(e){delete xe[e]}));var Pe=p.useState(!1),De=(0,i.Z)(Pe,2),Ne=De[0],Me=De[1];p.useEffect((function(){Me((0,h.Z)())}),[]);var Ie=p.useRef(null),ke=p.useRef(null),_e=p.useRef(null),Re=p.useRef(null),Te=p.useRef(null),Oe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,n=p.useState(!1),t=(0,i.Z)(n,2),o=t[0],r=t[1],a=p.useRef(null),u=function(){window.clearTimeout(a.current)};return p.useEffect((function(){return u}),[]),[o,function(n,t){u(),a.current=window.setTimeout((function(){r(n),t&&t()}),e)},u]}(),Ye=(0,i.Z)(Oe,3),Fe=Ye[0],Ve=Ye[1],Ae=Ye[2];p.useImperativeHandle(n,(function(){var e,n;return{focus:null===(e=Re.current)||void 0===e?void 0:e.focus,blur:null===(n=Re.current)||void 0===n?void 0:n.blur,scrollTo:function(e){var n;return null===(n=Te.current)||void 0===n?void 0:n.scrollTo(e)}}}));var Le=p.useMemo((function(){var e;if("combobox"!==T)return J;var n=null===(e=P[0])||void 0===e?void 0:e.value;return"string"==typeof n||"number"==typeof n?String(n):""}),[J,T,P]),Ke="combobox"===T&&"function"==typeof F&&F()||null,We="function"==typeof V&&V(),He=(0,g.x1)(ke,null==We||null===(t=We.props)||void 0===t?void 0:t.ref),ze=(0,s.Z)(void 0,{defaultValue:K,value:A}),je=(0,i.Z)(ze,2),Ue=je[0],Be=je[1],Ge=Ue,Xe=!_&&M;(O||Xe&&Ge&&"combobox"===T)&&(Ge=!1);var Qe=!Xe&&Ge,Je=p.useCallback((function(e){var n=void 0!==e?e:!Ge;Ge===n||O||(Be(n),null==W||W(n))}),[O,Ge,Be,W]),$e=p.useMemo((function(){return(ee||[]).some((function(e){return["\n","\r\n"].includes(e)}))}),[ee]),qe=function(e,n,t){var o=!0,a=e;null==X||X(null);var u=t?null:function(e,n){if(!n||!n.length)return null;var t=!1,o=function e(n,o){var a=(0,y.Z)(o),u=a[0],i=a.slice(1);if(!u)return[n];var l=n.split(u);return t=t||l.length>1,l.reduce((function(n,t){return[].concat((0,r.Z)(n),(0,r.Z)(e(t,i)))}),[]).filter((function(e){return e}))}(e,n);return t?o:null}(e,ee);return"combobox"!==T&&u&&(a="",null==q||q(u),Je(!1),o=!1),$&&Le!==a&&$(a,{source:n?"typing":"effect"}),o};p.useEffect((function(){Ge||Se||"combobox"===T||qe("",!1,!1)}),[Ge]),p.useEffect((function(){Ue&&O&&Be(!1),O&&Ve(!1)}),[O]);var en=L(),nn=(0,i.Z)(en,2),tn=nn[0],on=nn[1],rn=p.useRef(!1),an=[];p.useEffect((function(){return function(){an.forEach((function(e){return clearTimeout(e)})),an.splice(0,an.length)}}),[]);var un,ln=p.useState(null),cn=(0,i.Z)(ln,2),sn=cn[0],dn=cn[1],pn=p.useState({}),fn=(0,i.Z)(pn,2)[1];(0,b.Z)((function(){if(Qe){var e,n=Math.ceil(null===(e=Ie.current)||void 0===e?void 0:e.offsetWidth);sn===n||Number.isNaN(n)||dn(n)}}),[Qe]),We&&(un=function(e){Je(e)}),function(e,n,t,o){var r=p.useRef(null);r.current={open:n,triggerOpen:t,customizedTrigger:o},p.useEffect((function(){function e(e){var n,t;if(!(null===(n=r.current)||void 0===n?void 0:n.customizedTrigger)){var o=e.target;o.shadowRoot&&e.composed&&(o=e.composedPath()[0]||o),r.current.open&&[Ie.current,null===(t=_e.current)||void 0===t?void 0:t.getPopupElement()].filter((function(e){return e})).every((function(e){return!e.contains(o)&&e!==o}))&&r.current.triggerOpen(!1)}}return window.addEventListener("mousedown",e),function(){return window.removeEventListener("mousedown",e)}}),[])}(0,Qe,Je,!!We);var vn,mn,hn=p.useMemo((function(){return(0,u.Z)((0,u.Z)({},e),{},{notFoundContent:_,open:Ge,triggerOpen:Qe,id:f,showSearch:Ee,multiple:Se,toggleOpen:Je})}),[e,_,Qe,Ge,f,Ee,Se,Je]),gn=void 0!==te?te:Y||!Se&&"combobox"!==T;gn&&(vn=p.createElement(I,{className:v()("".concat(w,"-arrow"),(0,a.Z)({},"".concat(w,"-arrow-loading"),Y)),customizeIcon:oe,customizeIconProps:{loading:Y,searchValue:Le,open:Ge,focused:Fe,showSearch:Ee}})),!O&&ne&&(P.length||Le)&&(mn=p.createElement(I,{className:"".concat(w,"-clear"),onMouseDown:function(){null==R||R(),N([],{type:"clear",values:P}),qe("",!1,!1)},customizeIcon:re},"×"));var bn,yn=p.createElement(ae,{ref:Te}),wn=v()(w,Z,(d={},(0,a.Z)(d,"".concat(w,"-focused"),Fe),(0,a.Z)(d,"".concat(w,"-multiple"),Se),(0,a.Z)(d,"".concat(w,"-single"),!Se),(0,a.Z)(d,"".concat(w,"-allow-clear"),ne),(0,a.Z)(d,"".concat(w,"-show-arrow"),gn),(0,a.Z)(d,"".concat(w,"-disabled"),O),(0,a.Z)(d,"".concat(w,"-loading"),Y),(0,a.Z)(d,"".concat(w,"-open"),Ge),(0,a.Z)(d,"".concat(w,"-customize-input"),Ke),(0,a.Z)(d,"".concat(w,"-show-search"),Ee),d)),Zn=p.createElement(D,{ref:_e,disabled:O,prefixCls:w,visible:Qe,popupElement:yn,containerWidth:sn,animation:ue,transitionName:ie,dropdownStyle:le,dropdownClassName:ce,direction:E,dropdownMatchSelectWidth:se,dropdownRender:de,dropdownAlign:pe,placement:fe,getPopupContainer:ve,empty:M,getTriggerDOMNode:function(){return ke.current},onPopupVisibleChange:un,onPopupMouseEnter:function(){fn({})}},We?p.cloneElement(We,{ref:He}):p.createElement(H,(0,o.Z)({},e,{domRef:ke,prefixCls:w,inputElement:Ke,ref:Re,id:f,showSearch:Ee,mode:T,activeDescendantId:Q,tagRender:S,values:P,open:Ge,onToggleOpen:Je,activeValue:G,searchValue:Le,onSearch:qe,onSearchSubmit:function(e){e&&e.trim()&&$(e,{source:"submit"})},onRemove:function(e){var n=P.filter((function(n){return n!==e}));N(n,{type:"remove",values:[e]})},tokenWithEnter:$e})));return bn=We?Zn:p.createElement("div",(0,o.Z)({className:wn},xe,{ref:Ie,onMouseDown:function(e){var n,t=e.target,o=null===(n=_e.current)||void 0===n?void 0:n.getPopupElement();if(o&&o.contains(t)){var r=setTimeout((function(){var e,n=an.indexOf(r);-1!==n&&an.splice(n,1),Ae(),Ne||o.contains(document.activeElement)||null===(e=Re.current)||void 0===e||e.focus()}));an.push(r)}for(var a=arguments.length,u=new Array(a>1?a-1:0),i=1;i<a;i++)u[i-1]=arguments[i];null==Ze||Ze.apply(void 0,[e].concat(u))},onKeyDown:function(e){var n,t=tn(),o=e.which;if(o===m.Z.ENTER&&("combobox"!==T&&e.preventDefault(),Ge||Je(!0)),on(!!Le),o===m.Z.BACKSPACE&&!t&&Se&&!Le&&P.length){for(var a=(0,r.Z)(P),u=null,i=a.length-1;i>=0;i-=1){var l=a[i];if(!l.disabled){a.splice(i,1),u=l;break}}u&&N(a,{type:"remove",values:[u]})}for(var c=arguments.length,s=new Array(c>1?c-1:0),d=1;d<c;d++)s[d-1]=arguments[d];Ge&&Te.current&&(n=Te.current).onKeyDown.apply(n,[e].concat(s)),null==we||we.apply(void 0,[e].concat(s))},onKeyUp:function(e){for(var n=arguments.length,t=new Array(n>1?n-1:0),o=1;o<n;o++)t[o-1]=arguments[o];var r;Ge&&Te.current&&(r=Te.current).onKeyUp.apply(r,[e].concat(t)),null==ye||ye.apply(void 0,[e].concat(t))},onFocus:function(){Ve(!0),O||(ge&&!rn.current&&ge.apply(void 0,arguments),he.includes("focus")&&Je(!0)),rn.current=!0},onBlur:function(){Ve(!1,(function(){rn.current=!1,Je(!1)})),O||(Le&&("tags"===T?$(Le,{source:"submit"}):"multiple"===T&&$("",{source:"blur"})),be&&be.apply(void 0,arguments))}}),Fe&&!Ge&&p.createElement("span",{style:{width:0,height:0,position:"absolute",overflow:"hidden",opacity:0},"aria-live":"polite"},"".concat(P.map((function(e){var n=e.label,t=e.value;return["number","string"].includes((0,c.Z)(n))?n:t})).join(", "))),Zn,vn,mn),p.createElement(z.Provider,{value:hn},bn)}));const X=G;function Q(e,n){return T(e).join("").toUpperCase().includes(n)}var J=t(98924),$=0,q=(0,J.Z)();var ee=t(50344),ne=["children","value"],te=["children"];function oe(e){var n=e.key,t=e.props,o=t.children,r=t.value,a=(0,l.Z)(t,ne);return(0,u.Z)({key:n,value:void 0!==r?r:n,children:o},a)}function re(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return(0,ee.Z)(e).map((function(e,t){if(!p.isValidElement(e)||!e.type)return null;var o=e.type.isSelectOptGroup,r=e.key,a=e.props,i=a.children,c=(0,l.Z)(a,te);return n||!o?oe(e):(0,u.Z)((0,u.Z)({key:"__RC_SELECT_GRP__".concat(null===r?t:r,"__"),label:r},c),{},{options:re(i)})})).filter((function(e){return e}))}function ae(e,n,t,o,r){return p.useMemo((function(){var a=e;!e&&(a=re(n));var u=new Map,i=new Map,l=function(e,n,t){t&&"string"==typeof t&&e.set(n[t],n)};return function e(n){for(var a=arguments.length>1&&void 0!==arguments[1]&&arguments[1],c=0;c<n.length;c+=1){var s=n[c];!s[t.options]||a?(u.set(s[t.value],s),l(i,s,t.label),l(i,s,o),l(i,s,r)):e(s[t.options],!0)}}(a),{options:a,valueOptions:u,labelOptions:i}}),[e,n,t,o,r])}function ue(e){var n=p.useRef();n.current=e;var t=p.useCallback((function(){return n.current.apply(n,arguments)}),[]);return t}var ie=function(){return null};ie.isSelectOptGroup=!0;const le=ie;var ce=function(){return null};ce.isSelectOption=!0;const se=ce;var de=t(98423),pe=t(56982),fe=t(7606);const ve=p.createContext(null);var me=["disabled","title","children","style","className"];function he(e){return"string"==typeof e||"number"==typeof e}var ge=function(e,n){var t=p.useContext(z),u=t.prefixCls,c=t.id,s=t.open,d=t.multiple,f=t.mode,h=t.searchValue,g=t.toggleOpen,b=t.notFoundContent,y=t.onPopupScroll,w=p.useContext(ve),Z=w.flattenOptions,C=w.onActiveValue,S=w.defaultActiveFirstOption,E=w.onSelect,x=w.menuItemSelectedIcon,P=w.rawValues,D=w.fieldNames,M=w.virtual,k=w.listHeight,_=w.listItemHeight,R="".concat(u,"-item"),T=(0,pe.Z)((function(){return Z}),[s,Z],(function(e,n){return n[0]&&e[1]!==n[1]})),O=p.useRef(null),Y=function(e){e.preventDefault()},F=function(e){O.current&&O.current.scrollTo("number"==typeof e?{index:e}:e)},V=function(e){for(var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,t=T.length,o=0;o<t;o+=1){var r=(e+o*n+t)%t,a=T[r],u=a.group,i=a.data;if(!u&&!i.disabled)return r}return-1},A=p.useState((function(){return V(0)})),L=(0,i.Z)(A,2),K=L[0],W=L[1],H=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];W(e);var t={source:n?"keyboard":"mouse"},o=T[e];o?C(o.value,e,t):C(null,-1,t)};(0,p.useEffect)((function(){H(!1!==S?V(0):-1)}),[T.length,h]);var j=p.useCallback((function(e){return P.has(e)&&"combobox"!==f}),[f,(0,r.Z)(P).toString()]);(0,p.useEffect)((function(){var e,n=setTimeout((function(){if(!d&&s&&1===P.size){var e=Array.from(P)[0],n=T.findIndex((function(n){return n.data.value===e}));-1!==n&&(H(n),F(n))}}));return s&&(null===(e=O.current)||void 0===e||e.scrollTo(void 0)),function(){return clearTimeout(n)}}),[s,h]);var U=function(e){void 0!==e&&E(e,{selected:!P.has(e)}),d||g(!1)};if(p.useImperativeHandle(n,(function(){return{onKeyDown:function(e){var n=e.which,t=e.ctrlKey;switch(n){case m.Z.N:case m.Z.P:case m.Z.UP:case m.Z.DOWN:var o=0;if(n===m.Z.UP?o=-1:n===m.Z.DOWN?o=1:/(mac\sos|macintosh)/i.test(navigator.appVersion)&&t&&(n===m.Z.N?o=1:n===m.Z.P&&(o=-1)),0!==o){var r=V(K+o,o);F(r),H(r,!0)}break;case m.Z.ENTER:var a=T[K];a&&!a.data.disabled?U(a.value):U(void 0),s&&e.preventDefault();break;case m.Z.ESC:g(!1),s&&e.stopPropagation()}},onKeyUp:function(){},scrollTo:function(e){F(e)}}})),0===T.length)return p.createElement("div",{role:"listbox",id:"".concat(c,"_list"),className:"".concat(R,"-empty"),onMouseDown:Y},b);var B=Object.keys(D).map((function(e){return D[e]})),G=function(e){return e.label},X=function(e){var n=T[e];if(!n)return null;var t=n.data||{},r=t.value,a=n.group,u=(0,N.Z)(t,!0),i=G(n);return n?p.createElement("div",(0,o.Z)({"aria-label":"string"!=typeof i||a?null:i},u,{key:e,role:a?"presentation":"option",id:"".concat(c,"_list_").concat(e),"aria-selected":j(r)}),r):null};return p.createElement(p.Fragment,null,p.createElement("div",{role:"listbox",id:"".concat(c,"_list"),style:{height:0,width:0,overflow:"hidden"}},X(K-1),X(K),X(K+1)),p.createElement(fe.Z,{itemKey:"key",ref:O,data:T,height:k,itemHeight:_,fullHeight:!1,onMouseDown:Y,onScroll:y,virtual:M},(function(e,n){var t,r=e.group,u=e.groupOption,i=e.data,c=e.label,s=e.value,d=i.key;if(r){var f,m=null!==(f=i.title)&&void 0!==f?f:he(c)?c.toString():void 0;return p.createElement("div",{className:v()(R,"".concat(R,"-group")),title:m},void 0!==c?c:d)}var h=i.disabled,g=i.title,b=(i.children,i.style),y=i.className,w=(0,l.Z)(i,me),Z=(0,de.Z)(w,B),C=j(s),S="".concat(R,"-option"),E=v()(R,S,y,(t={},(0,a.Z)(t,"".concat(S,"-grouped"),u),(0,a.Z)(t,"".concat(S,"-active"),K===n&&!h),(0,a.Z)(t,"".concat(S,"-disabled"),h),(0,a.Z)(t,"".concat(S,"-selected"),C),t)),P=G(e),D=!x||"function"==typeof x||C,M="number"==typeof P?P:P||s,k=he(M)?M.toString():void 0;return void 0!==g&&(k=g),p.createElement("div",(0,o.Z)({},(0,N.Z)(Z),{"aria-selected":C,className:E,title:k,onMouseMove:function(){K===n||h||H(n)},onClick:function(){h||U(s)},style:b}),p.createElement("div",{className:"".concat(S,"-content")},M),p.isValidElement(x)||C,D&&p.createElement(I,{className:"".concat(R,"-option-state"),customizeIcon:x,customizeIconProps:{isSelected:C}},C?"✓":null))})))},be=p.forwardRef(ge);be.displayName="OptionList";const ye=be;var we=["id","mode","prefixCls","backfill","fieldNames","inputValue","searchValue","onSearch","autoClearSearchValue","onSelect","onDeselect","dropdownMatchSelectWidth","filterOption","filterSort","optionFilterProp","optionLabelProp","options","children","defaultActiveFirstOption","menuItemSelectedIcon","virtual","listHeight","listItemHeight","value","defaultValue","labelInValue","onChange"],Ze=["inputValue"],Ce=p.forwardRef((function(e,n){var t=e.id,d=e.mode,f=e.prefixCls,v=void 0===f?"rc-select":f,m=e.backfill,h=e.fieldNames,g=e.inputValue,b=e.searchValue,y=e.onSearch,S=e.autoClearSearchValue,E=void 0===S||S,x=e.onSelect,P=e.onDeselect,D=e.dropdownMatchSelectWidth,N=void 0===D||D,M=e.filterOption,I=e.filterSort,k=e.optionFilterProp,_=e.optionLabelProp,R=e.options,O=e.children,Y=e.defaultActiveFirstOption,F=e.menuItemSelectedIcon,V=e.virtual,A=e.listHeight,L=void 0===A?200:A,K=e.listItemHeight,W=void 0===K?20:K,H=e.value,z=e.defaultValue,j=e.labelInValue,U=e.onChange,G=(0,l.Z)(e,we),J=function(e){var n=p.useState(),t=(0,i.Z)(n,2),o=t[0],r=t[1];return p.useEffect((function(){var e;r("rc_select_".concat((q?(e=$,$+=1):e="TEST_OR_SSR",e)))}),[]),e||o}(t),ee=B(d),ne=!(R||!O),te=p.useMemo((function(){return(void 0!==M||"combobox"!==d)&&M}),[M,d]),oe=p.useMemo((function(){return Z(h,ne)}),[JSON.stringify(h),ne]),re=(0,s.Z)("",{value:void 0!==b?b:g,postState:function(e){return e||""}}),ie=(0,i.Z)(re,2),le=ie[0],ce=ie[1],se=ae(R,O,oe,k,_),de=se.valueOptions,pe=se.labelOptions,fe=se.options,me=p.useCallback((function(e){return T(e).map((function(e){var n,t,o,r,a;!function(e){return!e||"object"!==(0,c.Z)(e)}(e)?(o=e.key,t=e.label,n=null!==(a=e.value)&&void 0!==a?a:o):n=e;var u,i=de.get(n);return i&&(void 0===t&&(t=null==i?void 0:i[_||oe.label]),void 0===o&&(o=null!==(u=null==i?void 0:i.key)&&void 0!==u?u:n),r=null==i?void 0:i.disabled),{label:t,value:n,key:o,disabled:r}}))}),[oe,_,de]),he=(0,s.Z)(z,{value:H}),ge=(0,i.Z)(he,2),be=ge[0],Ce=ge[1],Se=function(e,n){var t=p.useRef({values:new Map,options:new Map});return[p.useMemo((function(){var o=t.current,r=o.values,a=o.options,i=e.map((function(e){var n;return void 0===e.label?(0,u.Z)((0,u.Z)({},e),{},{label:null===(n=r.get(e.value))||void 0===n?void 0:n.label}):e})),l=new Map,c=new Map;return i.forEach((function(e){l.set(e.value,e),c.set(e.value,n.get(e.value)||a.get(e.value))})),t.current.values=l,t.current.options=c,i}),[e,n]),p.useCallback((function(e){return n.get(e)||t.current.options.get(e)}),[n])]}(p.useMemo((function(){var e,n=me(be);return"combobox"!==d||(null===(e=n[0])||void 0===e?void 0:e.value)?n:[]}),[be,me,d]),de),Ee=(0,i.Z)(Se,2),xe=Ee[0],Pe=Ee[1],De=p.useMemo((function(){if(!d&&1===xe.length){var e=xe[0];if(null===e.value&&(null===e.label||void 0===e.label))return[]}return xe.map((function(e){var n;return(0,u.Z)((0,u.Z)({},e),{},{label:null!==(n=e.label)&&void 0!==n?n:e.value})}))}),[d,xe]),Ne=p.useMemo((function(){return new Set(xe.map((function(e){return e.value})))}),[xe]);p.useEffect((function(){if("combobox"===d){var e,n=null===(e=xe[0])||void 0===e?void 0:e.value;null!=n&&ce(String(n))}}),[xe]);var Me=ue((function(e,n){var t,o=null!=n?n:e;return t={},(0,a.Z)(t,oe.value,e),(0,a.Z)(t,oe.label,o),t})),Ie=function(e,n,t,o,r){return p.useMemo((function(){if(!t||!1===o)return e;var i=n.options,l=n.label,c=n.value,s=[],d="function"==typeof o,p=t.toUpperCase(),f=d?o:function(e,n){return r?Q(n[r],p):n[i]?Q(n["children"!==l?l:"label"],p):Q(n[c],p)},v=d?function(e){return C(e)}:function(e){return e};return e.forEach((function(e){if(e[i])if(f(t,v(e)))s.push(e);else{var n=e[i].filter((function(e){return f(t,v(e))}));n.length&&s.push((0,u.Z)((0,u.Z)({},e),{},(0,a.Z)({},i,n)))}else f(t,v(e))&&s.push(e)})),s}),[e,o,r,t,n])}(p.useMemo((function(){if("tags"!==d)return fe;var e=(0,r.Z)(fe);return(0,r.Z)(xe).sort((function(e,n){return e.value<n.value?-1:1})).forEach((function(n){var t=n.value;(function(e){return de.has(e)})(t)||e.push(Me(t,n.label))})),e}),[Me,fe,de,xe,d]),oe,le,te,k),ke=p.useMemo((function(){return"tags"!==d||!le||Ie.some((function(e){return e[k||"value"]===le}))?Ie:[Me(le)].concat((0,r.Z)(Ie))}),[Me,k,d,Ie,le]),_e=p.useMemo((function(){return I?(0,r.Z)(ke).sort((function(e,n){return I(e,n)})):ke}),[ke,I]),Re=p.useMemo((function(){return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.fieldNames,o=n.childrenAsData,r=[],a=Z(t,!1),u=a.label,i=a.value,l=a.options;function c(e,n){e.forEach((function(e){var t=e[u];if(n||!(l in e)){var a=e[i];r.push({key:w(e,r.length),groupOption:n,data:e,label:t,value:a})}else{var s=t;void 0===s&&o&&(s=e.label),r.push({key:w(e,r.length),group:!0,data:e,label:s}),c(e[l],!0)}}))}return c(e,!1),r}(_e,{fieldNames:oe,childrenAsData:ne})}),[_e,oe,ne]),Te=function(e){var n=me(e);if(Ce(n),U&&(n.length!==xe.length||n.some((function(e,n){var t;return(null===(t=xe[n])||void 0===t?void 0:t.value)!==(null==e?void 0:e.value)})))){var t=j?n:n.map((function(e){return e.value})),o=n.map((function(e){return C(Pe(e.value))}));U(ee?t:t[0],ee?o:o[0])}},Oe=p.useState(null),Ye=(0,i.Z)(Oe,2),Fe=Ye[0],Ve=Ye[1],Ae=p.useState(0),Le=(0,i.Z)(Ae,2),Ke=Le[0],We=Le[1],He=void 0!==Y?Y:"combobox"!==d,ze=p.useCallback((function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=t.source,r=void 0===o?"keyboard":o;We(n),m&&"combobox"===d&&null!==e&&"keyboard"===r&&Ve(String(e))}),[m,d]),je=function(e,n){var t=function(){var n,t=Pe(e);return[j?{label:null==t?void 0:t[oe.label],value:e,key:null!==(n=null==t?void 0:t.key)&&void 0!==n?n:e}:e,C(t)]};if(n&&x){var o=t(),r=(0,i.Z)(o,2),a=r[0],u=r[1];x(a,u)}else if(!n&&P){var l=t(),c=(0,i.Z)(l,2),s=c[0],d=c[1];P(s,d)}},Ue=ue((function(e,n){var t,o=!ee||n.selected;t=o?ee?[].concat((0,r.Z)(xe),[e]):[e]:xe.filter((function(n){return n.value!==e})),Te(t),je(e,o),"combobox"===d?Ve(""):B&&!E||(ce(""),Ve(""))})),Be=p.useMemo((function(){var e=!1!==V&&!1!==N;return(0,u.Z)((0,u.Z)({},se),{},{flattenOptions:Re,onActiveValue:ze,defaultActiveFirstOption:He,onSelect:Ue,menuItemSelectedIcon:F,rawValues:Ne,fieldNames:oe,virtual:e,listHeight:L,listItemHeight:W,childrenAsData:ne})}),[se,Re,ze,He,Ue,F,Ne,oe,V,N,L,W,ne]);return p.createElement(ve.Provider,{value:Be},p.createElement(X,(0,o.Z)({},G,{id:J,prefixCls:v,ref:n,omitDomProps:Ze,mode:d,displayValues:De,onDisplayValuesChange:function(e,n){Te(e),"remove"!==n.type&&"clear"!==n.type||n.values.forEach((function(e){je(e.value,!1)}))},searchValue:le,onSearch:function(e,n){if(ce(e),Ve(null),"submit"!==n.source)"blur"!==n.source&&("combobox"===d&&Te(e),null==y||y(e));else{var t=(e||"").trim();if(t){var o=Array.from(new Set([].concat((0,r.Z)(Ne),[t])));Te(o),je(t,!0),ce("")}}},onSearchSplit:function(e){var n=e;"tags"!==d&&(n=e.map((function(e){var n=pe.get(e);return null==n?void 0:n.value})).filter((function(e){return void 0!==e})));var t=Array.from(new Set([].concat((0,r.Z)(Ne),(0,r.Z)(n))));Te(t),t.forEach((function(e){je(e,!0)}))},dropdownMatchSelectWidth:N,OptionList:ye,emptyOptions:!Re.length,activeValue:Fe,activeDescendantId:"".concat(J,"_list_").concat(Ke)})))}));Ce.Option=se,Ce.OptGroup=le;const Se=Ce}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,